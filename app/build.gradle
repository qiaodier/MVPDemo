apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply from: "/upload2Pgyer.gradle"
apply plugin: "androidx.navigation.safeargs"


//apply plugin: 'com.mvp.plugin.JiaguPlugin'


// 打包时间
static def buildTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
}


android {
    project.ext.upload2d project, "初次上传"
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    flavorDimensions rootProject.ext.android["flavorDimensions"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner rootProject.ext.android["testInstrumentationRunner"]

        ndk {
            moduleName "InfoJni"          //生成的so名字,这个可以随意取名
            abiFilters "armeabi", "armeabi-v7a", "x86" //输出指定三种abi体系结构下的so库，目前可有可无。
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "boolean", "LOG_DEBUG", "true"

        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            shrinkResources true
            //解决3.1.2 版本studio打包遇到aapt2的问题
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //签名配置
    signingConfigs {
        //发布版本
        release {
            storeFile file(rootProject.ext.signing["release-store-file"])
            storePassword rootProject.ext.signing["release-storePassword"]
            keyAlias rootProject.ext.signing["release-keyAlias"]
            keyPassword rootProject.ext.signing["release-keyPassword"]
        }
        //开发版本配置
        debug {

        }
    }
    //打包后apk重命名
    android.applicationVariants.all { variant ->
        def outputName
        def productName
        if (project.hasProperty("APK_NAME")) {
            outputName = APK_NAME
        } else {
            outputName = parent.name
        }
        variant.productFlavors.each { product ->
            productName = product.name
        }

        variant.outputs.all { output ->
            outputFileName = "${variant.versionName}-${variant.versionCode}-${buildTime()}-${outputName}-${productName}-${buildType.name}.apk"
        }
    }

    //渠道配置
    productFlavors {
        product {

            signingConfig signingConfigs.release
            //服务器商用url
            buildConfigField "String", "BASE_URL", '"https:www.baidu.com/"'
        }

        dev {

            signingConfig signingConfigs.release
            //服务器测试url
            buildConfigField "String", "BASE_URL", '"https:www.baidu.com/"'
        }

    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //约束布局
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    testImplementation 'junit:junit:4.12'
    //glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    //rxpermissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    //navigation
    def nav_version = "2.3.0-alpha01"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // mvp架构+网络请求+自定义注解+
    implementation project(path: ':mvp_master')
    //自定义注解处理器
    implementation project(':router-compiler')
    annotationProcessor project(':router-compiler')
    //apt
    annotationProcessor "com.neenbedankt.gradle.plugins:android-apt:1.8"
}
